<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>USBDevice.BeginControlTransfer Method (Byte, Byte, Int32, Int32, AsyncCallback, Object)</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:MadWizard.WinUSBNet.USBDevice.BeginControlTransfer(System.Byte,System.Byte,System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><meta name="Description" content="Initiates an asynchronous control transfer without a data stage over the default control endpoint. This method allows both IN and OUT direction transfers, depending on the highest bit of the parameter." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="MadWizard.WinUSBNet" /><meta name="file" content="772f715a-1ba0-a1cb-4360-17a715136cc1" /><meta name="guid" content="772f715a-1ba0-a1cb-4360-17a715136cc1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">WinUSBNet Reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/9a5a817b-556c-88ca-5e4f-5d076246fda0.htm" title="WinUSBNet Reference" tocid="roottoc">WinUSBNet Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/9a5a817b-556c-88ca-5e4f-5d076246fda0.htm" title="MadWizard.WinUSBNet" tocid="9a5a817b-556c-88ca-5e4f-5d076246fda0">MadWizard.WinUSBNet</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/fd43734c-38e1-81a4-d77c-957819af0a08.htm" title="USBDevice Class" tocid="fd43734c-38e1-81a4-d77c-957819af0a08">USBDevice Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/d1c27647-5989-955f-5d4f-a244f109ebdc.htm" title="USBDevice Methods" tocid="d1c27647-5989-955f-5d4f-a244f109ebdc">USBDevice Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/0b0d3bed-9bb4-1518-b774-04577e847b52.htm" title="BeginControlTransfer Method " tocid="0b0d3bed-9bb4-1518-b774-04577e847b52">BeginControlTransfer Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/772f715a-1ba0-a1cb-4360-17a715136cc1.htm" title="BeginControlTransfer Method (Byte, Byte, Int32, Int32, AsyncCallback, Object)" tocid="772f715a-1ba0-a1cb-4360-17a715136cc1">BeginControlTransfer Method (Byte, Byte, Int32, Int32, AsyncCallback, Object)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0119af65-85fc-f343-2e68-df12be049e27.htm" title="BeginControlTransfer Method (Byte, Byte, Int32, Int32, Byte[], AsyncCallback, Object)" tocid="0119af65-85fc-f343-2e68-df12be049e27">BeginControlTransfer Method (Byte, Byte, Int32, Int32, Byte[], AsyncCallback, Object)</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/ca020231-ac72-6595-5ddf-71c1504f2ad8.htm" title="BeginControlTransfer Method (Byte, Byte, Int32, Int32, Byte[], Int32, AsyncCallback, Object)" tocid="ca020231-ac72-6595-5ddf-71c1504f2ad8">BeginControlTransfer Method (Byte, Byte, Int32, Int32, Byte[], Int32, AsyncCallback, Object)</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>USBDevice<span id="LST30DE0971_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_0?cpp=::|nu=.");</script>BeginControlTransfer Method (Byte, Byte, Int32, Int32, AsyncCallback, Object)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Initiates an asynchronous control transfer without a data stage over the default control endpoint. This method allows both IN and OUT direction transfers, depending
            on the highest bit of the <span class="parameter">requestType</span> parameter. Alternatively, <a href="d8dae847-9ffc-0b67-ad7d-ff2640951ab6.htm">BeginControlIn(Byte, Byte, Int32, Int32, <span id="LST30DE0971_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_1?cpp=array&lt;");</script>Byte<span id="LST30DE0971_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_2?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, AsyncCallback, Object)</a> and
            <a href="d8dae847-9ffc-0b67-ad7d-ff2640951ab6.htm">BeginControlIn(Byte, Byte, Int32, Int32, <span id="LST30DE0971_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_3?cpp=array&lt;");</script>Byte<span id="LST30DE0971_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_4?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, AsyncCallback, Object)</a> can be used for asynchronous control transfers in a specific direction, which is
            the recommended way because it prevents using the wrong direction accidentally. Use the BeginControlTransfer method when the direction is not
            known at compile time. </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="9a5a817b-556c-88ca-5e4f-5d076246fda0.htm">MadWizard.WinUSBNet</a><br />
    <strong>Assembly:</strong>
   WinUSBNet (in WinUSBNet.dll) Version: 2.0.0.0 (2.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0ECCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cs','1','3');return false;">C#</a></div><div id="ID0ECCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','vb','2','3');return false;">VB</a></div><div id="ID0ECCA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0ECCA','cpp','3','3');return false;">C++</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0ECCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0ECCA');return false;" title="Copy">Copy</a></div></div><div id="ID0ECCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">IAsyncResult</span> <span class="identifier">BeginControlTransfer</span>(
	<span class="identifier">byte</span> <span class="parameter">requestType</span>,
	<span class="identifier">byte</span> <span class="parameter">request</span>,
	<span class="identifier">int</span> <span class="parameter">value</span>,
	<span class="identifier">int</span> <span class="parameter">index</span>,
	<span class="identifier">AsyncCallback</span> <span class="parameter">userCallback</span>,
	<span class="identifier">Object</span> <span class="parameter">stateObject</span>
)</pre></div><div id="ID0ECCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">BeginControlTransfer</span> ( 
	<span class="parameter">requestType</span> <span class="keyword">As</span> <span class="identifier">Byte</span>,
	<span class="parameter">request</span> <span class="keyword">As</span> <span class="identifier">Byte</span>,
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">index</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">userCallback</span> <span class="keyword">As</span> <span class="identifier">AsyncCallback</span>,
	<span class="parameter">stateObject</span> <span class="keyword">As</span> <span class="identifier">Object</span>
) <span class="keyword">As</span> <span class="identifier">IAsyncResult</span></pre></div><div id="ID0ECCA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">IAsyncResult</span>^ <span class="identifier">BeginControlTransfer</span>(
	<span class="identifier">unsigned char</span> <span class="parameter">requestType</span>, 
	<span class="identifier">unsigned char</span> <span class="parameter">request</span>, 
	<span class="identifier">int</span> <span class="parameter">value</span>, 
	<span class="identifier">int</span> <span class="parameter">index</span>, 
	<span class="identifier">AsyncCallback</span>^ <span class="parameter">userCallback</span>, 
	<span class="identifier">Object</span>^ <span class="parameter">stateObject</span>
)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0ECCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">requestType</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.byte" target="_blank">System<span id="LST30DE0971_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Byte</a><br />The setup packet request type.</dd><dt><span class="parameter">request</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.byte" target="_blank">System<span id="LST30DE0971_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Byte</a><br />The setup packet device request.</dd><dt><span class="parameter">value</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST30DE0971_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The value member in the setup packet. Its meaning depends on the request. Value should be between zero and 65535 (0xFFFF).</dd><dt><span class="parameter">index</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank">System<span id="LST30DE0971_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_8?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Int32</a><br />The index member in the setup packet. Its meaning depends on the request. Index should be between zero and 65535 (0xFFFF).</dd><dt><span class="parameter">userCallback</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.asynccallback" target="_blank">System<span id="LST30DE0971_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AsyncCallback</a><br />An optional asynchronous callback, to be called when the control transfer is complete. Can be null if no callback is required.</dd><dt><span class="parameter">stateObject</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank">System<span id="LST30DE0971_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST30DE0971_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />A user-provided object that distinguishes this particular asynchronous operation. Can be null if not required.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult" target="_blank">IAsyncResult</a><br />An <a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult" target="_blank">IAsyncResult</a> object representing the asynchronous control transfer, which could still be pending.</div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection">This method always completes immediately even if the operation is still pending. The <a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult" target="_blank">IAsyncResult</a> object returned represents the operation
            and must be passed to <a href="178e53b3-6ada-daca-7d0b-1b8d40fe2140.htm">EndControlTransfer(IAsyncResult)</a> to retrieve the result of the operation. For every call to this method a matching call to
            <a href="178e53b3-6ada-daca-7d0b-1b8d40fe2140.htm">EndControlTransfer(IAsyncResult)</a> must be made. When <span class="parameter">userCallback</span> specifies a callback function, this function will be called when the operation is completed. The optional
            <span class="parameter">stateObject</span> parameter can be used to pass user-defined information to this callback or the <a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult" target="_blank">IAsyncResult</a>. The <a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult" target="_blank">IAsyncResult</a>
            also provides an event handle (<a href="https://docs.microsoft.com/dotnet/api/system.iasyncresult.asyncwaithandle#System_IAsyncResult_AsyncWaitHandle" target="_blank">AsyncWaitHandle</a>) that will be triggered when the operation is complete as well.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="fd43734c-38e1-81a4-d77c-957819af0a08.htm">USBDevice Class</a></div><div class="seeAlsoStyle"><a href="0b0d3bed-9bb4-1518-b774-04577e847b52.htm">BeginControlTransfer Overload</a></div><div class="seeAlsoStyle"><a href="9a5a817b-556c-88ca-5e4f-5d076246fda0.htm">MadWizard.WinUSBNet Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.madwizard.org/" target="_blank">(C) 2010 - 2017 Thomas Bleeker (MadWizard.org)</a></p> </div></body></html>